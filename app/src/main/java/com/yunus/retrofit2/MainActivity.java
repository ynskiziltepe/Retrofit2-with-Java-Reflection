package com.yunus.retrofit2;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.List;
import java.util.Locale;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofitapi.ApiUtil;

public class MainActivity extends AppCompatActivity {

    private final String TAG = MainActivity.class.getSimpleName();
    private RecyclerView recyclerView;
    private boolean btnFlag = true;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Locale.setDefault(new Locale("en", "US"));

        setContentView(R.layout.activity_main);

        recyclerView = findViewById(R.id.recycler_id);
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
        recyclerView.setLayoutManager(linearLayoutManager);
        recyclerView.setHasFixedSize(true);
    }

    public void onBtnClick(View view)  {

        if (view.getId() == R.id.btnGetData) {

            int LINK_2_ID = 2;
            int LINK_1_ID = 1;
            loadData(btnFlag ? LINK_1_ID : LINK_2_ID);

            ((Button)(view)).setText(String.format("%s %s",
                    getString(R.string.fetch_data_link), btnFlag ? LINK_2_ID : LINK_1_ID));

            btnFlag = !btnFlag;
        }
    }

    /**
        Load data from from server via Retrofit
        @param linkId : Two link used in this project for load from server
    */
    private void loadData(int linkId) {

        Method postFromLink;
        Call<List<SimpleObject>> simpleObject;
        try {
            postFromLink = ApiUtil.getServiceClass()
                    .getClass().getMethod("getAllPostFromLink" + linkId);

            simpleObject = (Call<List<SimpleObject>>) postFromLink.invoke(ApiUtil.getServiceClass());

        } catch (NoSuchMethodException | InvocationTargetException | IllegalAccessException e) {
            e.printStackTrace();
            return;
        }

        simpleObject.enqueue(new Callback<List<SimpleObject>>() {
            @Override
            public void onResponse(Call<List<SimpleObject>> call, Response<List<SimpleObject>> response) {
                if(response.isSuccessful()){
                    List<SimpleObject> postList = response.body();
                    Log.d(TAG, "received count" + postList.size());
                    NewAdapter adapter = new NewAdapter(postList);
                    recyclerView.setAdapter(adapter);
                }
            }

            @Override
            public void onFailure(Call<List<SimpleObject>> call, Throwable t) {

                Toast.makeText(getApplicationContext(), t.getMessage(), Toast.LENGTH_LONG).show();
                Log.d(TAG, "error loading from server");
            }
        });

        // I aimed to show Reflection in the above code
        // The code below does the same as code above
        // The below code is without Java Reflection.
        // Of course, the following code can be generated by taking advantage of the Retrofit2 features for simpler,
        // But since my aim is also to show Reflection, I designed it this way.
        /*
        if(btnFlag) {
            ApiUtil.getServiceClass().getAllPostFromLink1().enqueue(new Callback<List<SimpleObject>>() {
                @Override
                public void onResponse(Call<List<SimpleObject>> call, Response<List<SimpleObject>> response) {
                    if(response.isSuccessful()){
                        List<SimpleObject> postList = response.body();
                        Log.d(TAG, "Returned count " + postList.size());
                        NewAdapter adapter = new NewAdapter(postList);
                        recyclerView.setAdapter(adapter);
                    }
                }

                @Override
                public void onFailure(Call<List<SimpleObject>> call, Throwable t) {

                    Toast.makeText(getApplicationContext(), t.getMessage(), Toast.LENGTH_LONG).show();
                    Log.d(TAG, "error loading from API");
                }
            });
        } else {
            ApiUtil.getServiceClass().getAllPostFromLink2().enqueue(new Callback<List<SimpleObject>>() {
                @Override
                public void onResponse(Call<List<SimpleObject>> call, Response<List<SimpleObject>> response) {
                    if(response.isSuccessful()){
                        List<SimpleObject> postList = response.body();
                        Log.d(TAG, "Returned count " + postList.size());
                        NewAdapter adapter = new NewAdapter(postList);
                        recyclerView.setAdapter(adapter);
                    }
                }

                @Override
                public void onFailure(Call<List<SimpleObject>> call, Throwable t) {

                    Toast.makeText(getApplicationContext(), t.getMessage(), Toast.LENGTH_LONG).show();
                    Log.d(TAG, "error loading from API");
                }
            });
        }
        */
    }
}
